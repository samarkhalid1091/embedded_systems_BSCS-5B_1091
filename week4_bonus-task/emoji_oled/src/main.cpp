#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// ---- OLED setup ----
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_ADDR 0x3C

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

// ---- 64x64 Face Emoji Bitmap ----
const unsigned char epd_bitmap_face_emoji_imresizer [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0xf0, 0xff, 0xff, 
	0xff, 0xff, 0x0f, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xf8, 0x7f, 0xff, 
	0xff, 0xfc, 0x3f, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xfe, 0x3f, 0xff, 
	0xff, 0xf8, 0x7f, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xff, 
	0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 
	0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xfe, 0x07, 0xff, 
	0xff, 0xe0, 0x03, 0xff, 0xff, 0xc0, 0x07, 0xff, 0xff, 0xc0, 0x00, 0x3f, 0xfc, 0x00, 0x03, 0xff, 
	0xff, 0xc0, 0x00, 0x07, 0xe0, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
	0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x90, 0x00, 0x00, 0x00, 0x00, 0x09, 0xff, 
	0xff, 0x98, 0x00, 0x00, 0x00, 0x00, 0x08, 0xff, 0xff, 0x18, 0x00, 0x01, 0x80, 0x00, 0x18, 0xff, 
	0xff, 0x18, 0x00, 0x03, 0xc0, 0x00, 0x18, 0xff, 0xff, 0x1c, 0x00, 0x03, 0xc0, 0x00, 0x18, 0xff, 
	0xff, 0x1c, 0x00, 0x07, 0xe0, 0x00, 0x38, 0xff, 0xff, 0x1e, 0x00, 0x07, 0xe0, 0x00, 0x38, 0xff, 
	0xff, 0x1f, 0x00, 0x0f, 0xf0, 0x00, 0x78, 0xff, 0xff, 0x1f, 0x00, 0x0f, 0xf0, 0x00, 0xf8, 0xff, 
	0xff, 0x1f, 0xc0, 0x1f, 0xf8, 0x01, 0xf8, 0xff, 0xff, 0x1f, 0xe0, 0x7f, 0xfe, 0x0f, 0xf8, 0xff, 
	0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 
	0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 
	0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 
	0xff, 0x8f, 0xfb, 0xff, 0xff, 0xdf, 0xf1, 0xff, 0xff, 0x8f, 0xf8, 0xff, 0xff, 0x1f, 0xf1, 0xff, 
	0xff, 0xc7, 0xf8, 0x7f, 0xfe, 0x1f, 0xe3, 0xff, 0xff, 0xc7, 0xfc, 0x1f, 0xf8, 0x3f, 0xe3, 0xff, 
	0xff, 0xc7, 0xfc, 0x07, 0xe0, 0x3f, 0xe3, 0xff, 0xff, 0xe3, 0xfe, 0x00, 0x00, 0x7f, 0xe3, 0xff, 
	0xff, 0xe3, 0xff, 0x00, 0x00, 0xff, 0xc7, 0xff, 0xff, 0xe3, 0xff, 0x80, 0x01, 0xff, 0xc7, 0xff, 
	0xff, 0xf1, 0xff, 0xe0, 0x07, 0xff, 0x8f, 0xff, 0xff, 0xf1, 0xff, 0xfc, 0x7f, 0xff, 0x8f, 0xff, 
	0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xff, 
	0xff, 0xf8, 0x7f, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xfc, 0x3f, 0xff, 
	0xff, 0xfe, 0x1f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xf8, 0x7f, 0xff, 
	0xff, 0xff, 0x0f, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xe1, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

// Array of all bitmaps for convenience (optional)
const int epd_bitmap_allArray_LEN = 1;
const unsigned char* epd_bitmap_allArray[1] = {
	epd_bitmap_face_emoji_imresizer
};

void setup() {
  Wire.begin(21, 22); // ESP32 default I2C pins (SDA=21, SCL=22)

  if (!display.begin(SSD1306_SWITCHCAPVCC, OLED_ADDR)) {
    for (;;); // stop if OLED not found
  }

  display.clearDisplay();
}

void loop() {
  display.clearDisplay();

  // ðŸŸ¡ Draw the 64x64 face emoji bitmap
  display.drawBitmap(32, 0, epd_bitmap_face_emoji_imresizer, 64, 64, SSD1306_WHITE);

  display.display();
  delay(5000);
}